{{- $extensions := list
     "MS-CEINTL.vscode-language-pack-es"
-}}

{{- $old_extensions := list -}}
{{- if .core.ephemeral -}}
{{- $old_extensions = concat $old_extensions (list
     "stkb.rewrap"
     "ms-python.python"
     "yzhang.markdown-all-in-one")
-}}
{{- end -}}

{{- if .core.personal -}}
{{- $extensions = concat $extensions (list
     "ms-vscode-remote.remote-containers"
)}}
{{- $old_extensions = concat $old_extensions (list
     "bungcip.better-toml"
     "DavidAnson.vscode-markdownlint"
     "devMike.mikrotik-routeros-script"
     "EditorConfig.EditorConfig"
     "foxundermoon.shell-format"
     "GitHub.copilot"
     "hashicorp.hcl"
     "mads-hartmann.bash-ide-vscode"
     "mesonbuild.mesonbuild"
     "ms-azuretools.vscode-docker"
     "ms-python.python"
     "ms-python.isort"
     "ms-python.python"
     "ms-python.vscode-pylance"
     "ms-vscode-remote.remote-ssh"
     "ms-vscode-remote.remote-ssh-edit"
     "ms-vscode-remote.vscode-remote-extensionpack"
     "redhat.vscode-yaml"
     "rust-lang.rust-analyzer"
     "stkb.rewrap"
     "streetsidesoftware.code-spell-checker"
     "twpayne.vscode-testscript"
     "Tyriar.sort-lines"
     "vscode-icons-team.vscode-icons"
     "yzhang.markdown-all-in-one")
-}}
{{- end -}}

{{ if len $extensions  -}}
#!/bin/sh

set -eu -o pipefail

if command -v code >/dev/null; then
  {{- $installed_extensions := splitList " " (output "sh" "-c" "code.sh --list-extensions | tr '\n' ' '" | trim) }}
    # Purge extensions not listed here
  {{- range $installed_extensions }}
    {{- if not (has . $extensions) }} 
    code --force --uninstall-extension "{{ . }}"
    {{- end }}
  {{- end }}

    # Install missing extensions
  {{- range $extensions }}
    {{- if not (has . $installed_extensions) }}
    code --force --install-extension "{{ . }}"
    {{- end }}
  {{- end }}
    # Just ensure this conditional is not empty...
    :
fi
{{- end }}

