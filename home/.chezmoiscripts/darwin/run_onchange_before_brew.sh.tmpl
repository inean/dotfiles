{{- /* # Boostrap packages */ -}}
{{- $brews := list -}}
{{- $casks := list -}}

{{- /* # Core packages */ -}}
{{- $brews = concat $brews (list
    "bash"
    "bash-completion@2"
    "coreutils"
    "findutils"
    "gnu-sed"
    "jq"
    ) -}}

{{- /* #General Dev packages */ -}}
{{ if .core.coding }}
  {{- $brews = concat $brews (list
    "gh"
    "git-extras"
    "git-delta"
    "git-lfs"
    "httpie"
    "tealdeer"
    "tmux"
    "tmux-xpanes"
    ) -}}
{{- end -}}

{{- /* # Docker packages */ -}}
{{- if .core.docker -}}
  {{ $brews = concat $brews (list
    "podman"
    "podman-compose") -}}

  {{- if not .core.headless -}}
    {{- $casks = concat $casks (list
      "podman-desktop") -}}
  {{- end -}}

{{- end -}}

{{- /* # GUI core packages */ -}}
{{- if not .core.headless -}}
  {{- $casks = concat $casks (list
    "firefox"
    "google-chrome"
    "iterm2"
    "visual-studio-code"
    ) -}}
{{- end -}}

{{- if or (not .core.headless) (not .core.ephemeral) -}}
  {{- $brews = concat $brews (list
     "bat"
     "exa"
     "ffmpeg"
     "fzf"
     "ripgrep"
     "wget"
     "xz"
     "ssh-copy-id"
     "yt-dlp"
     ) -}}
     {{- if eq .chezmoi.arch "amd64" -}}
    {{- $brews = concat $brews (list
      "shellcheck") -}}
      {{- end -}}

      {{- $casks = concat $casks (list
        "balenaetcher"
        "gns3"
        "spotify"
        "telegram"
        "transmission"
        "unnaturalscrollwheels"
        "vagrant"
        "vlc"
        "whatsapp"
        ) -}}
     {{- if and (eq .chezmoi.os "darwin") (le "14" (substr 7 9 .osid)) -}}
     {{- $casks = concat $casks (list
       "vagrant-vmware-utility"
       "vmware-fusion"
       ) -}}
  {{- end -}}

  {{ if .core.personal -}}
  {{- $brews = concat $brews (list
    "age"
    "gopass"
    "gnupg"
    "pinentry-mac"
    "vault"
    ) -}}
    {{- end -}}
{{- end -}}

#!/bin/bash

set -eufo pipefail

# Install Homebrew.
if [ ! -x "$(command -v brew)" ]; then
   brew_url="https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"
   if [ "$(command -v curl)" ]; then
    /bin/bash -c "$(curl -fsSL $brew_url)"
  elif [ "$(command -v wget)" ]; then
    /bin/bash -c "$(wget -qO- $brew_url)"
  else
    echo "To install Homebrew, you must have curl or wget installed." >&2
    exit 1
  fi
  # Ensure brew could be find
fi

# Export homebrew environment
{{ if eq .chezmoi.arch "amd64" }}
  eval $(/usr/local/bin/brew shellenv)
{{ else }}
  eval $(/opt/homebrew/bin/brew shellenv)
{{ end }}

# Make sure we’re using the latest Homebrew.
brew update

brew bundle --no-lock --no-upgrade --file=/dev/stdin <<EOF
tap "homebrew/core"
tap "homebrew/cask"
tap "homebrew/bundle"
tap "homebrew/services"

{{ range ($brews | sortAlpha | uniq) -}}
brew "{{ . }}"
{{ end -}}
{{ range ($casks | sortAlpha | uniq) -}}
cask "{{ . }}"
{{ end -}}
EOF

# Now upgrade any already-installed formulae.
brew upgrade
# And finally cleanup all this
brew cleanup

{{ if .core.personal -}}
# Save Homebrew’s installed location.
BREW_PREFIX=$(brew --prefix)

# Switch to using brew-installed bash as default bash shell
if ! fgrep -q "${BREW_PREFIX}/bin/bash" /etc/shells; then
  echo "${BREW_PREFIX}/bin/bash" | sudo tee -a /etc/shells;
fi;
{{- end -}}
