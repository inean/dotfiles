{{- /* # Boostrap packages */ -}}
{{- $brews := list -}}
{{- $casks := list -}}

{{- /* # Core packages */ -}}
{{- $brews = concat $brews (list
    `"bash"`
    `"bash-completion@2"`
    `"coreutils"`
    `"findutils"`
    `"gnu-sed"`
    `"jq"`
    ) -}}

{{- /* #General Dev packages */ -}}
{{ if .core.coding }}
  {{- $brews = concat $brews (list
    `"actionlint"`
    `"gh"`
    `"git-extras"`
    `"git-delta"`
    `"git-lfs"`
    `"httpie"`
    `"pre-commit"`
    `"tealdeer"`
    `"tmux"`
    `"tmux-xpanes"`
    ) -}}
    {{- if eq .chezmoi.arch "arm64" }}
      {{- $brews = concat $brews (list
        `"tart"`
      ) -}}
    {{- end }}
{{- end -}}

{{- /* # Docker packages */ -}}
{{- if .core.docker -}}
  {{ $brews = concat $brews (list
    `"podman"`
    `"podman-compose"`) -}}

  {{- if not .core.headless -}}
    {{- $casks = concat $casks (list
      `"podman-desktop"`) -}}
  {{- end -}}

{{- end -}}

{{- /* # GUI core packages */ -}}
{{- if not .core.headless -}}
  {{- $casks = concat $casks (list
    `"firefox"`
    `"google-chrome"`
    `"iterm2"`
    `"visual-studio-code"`
    ) -}}
{{- end -}}

{{- if or (not .core.headless) (not .core.ephemeral) -}}
  {{- $brews = concat $brews (list
     `"bat"`
     `"eza"`
     `"ffmpeg"`
     `"fzf"`
     `"ripgrep"`
     `"wget"`
     `"xz"`
     `"ssh-copy-id"`
     `"yt-dlp"`
     ) -}}
     {{- if eq .chezmoi.arch "amd64" -}}
    {{- $brews = concat $brews (list
      `"shellcheck"`) -}}
      {{- end -}}

      {{- $casks = concat $casks (list
        `"balenaetcher"`
        `"gns3"`
        `"spotify"`
        `"telegram"`
        `"ultimaker-cura"`
        `"unnaturalscrollwheels"`
        `"vagrant"`
        `"vlc"`
        `"whatsapp"`
        ) -}}
     {{- if and (eq .chezmoi.os "darwin") (le "14" (substr 7 9 .osid)) -}}
     {{- $casks = concat $casks (list
       `"vagrant-vmware-utility"`
       `"vmware-fusion"`
       ) -}}
  {{- end -}}

  {{ if .core.personal -}}
  {{- $brews = concat $brews (list
    `"age"`
    `"inean/brews/mac-telnet", args: ["HEAD"]`
    `"gopass"`
    `"gnupg"`
    `"pinentry-mac"`
    `"vault"`
    ) -}}
    {{- end -}}
{{- end -}}

#!/bin/bash

set -eufo pipefail

# Install Homebrew.

# Define homebrew environment
{{ if eq .chezmoi.arch "amd64" -}}
  HOMEBREW_PREFIX="/usr/local"
{{ else -}}
  HOMEBREW_PREFIX="/opt/homebrew"
{{ end }}

if [ ! -x "$(command -v ${HOMEBREW_PREFIX}/bin/brew)" ]; then
  brew_url="https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"
  if [ "$(command -v curl)" ]; then
    /bin/bash -c "$(curl -fsSL $brew_url)"
  else
    echo "To install Homebrew, you must have curl installed." >&2
    exit 1
  fi
  # Ensure brew could be find
fi

# Export homebrew environment
eval $("${HOMEBREW_PREFIX}/bin/brew" shellenv)

# Make sure we’re using the latest Homebrew.
brew update

# Build Brewfile
BREWFILE="${XDG_CONFIG_HOME}/brew/Brewfile"
mkdir -p "${BREWFILE%/*}"

cat > ${BREWFILE} <<EOF
tap "homebrew/core"
tap "homebrew/cask"
tap "homebrew/bundle"
tap "homebrew/services"
{{- if .core.coding }}
  {{- if eq .chezmoi.arch "arm64" }}
    tap "cirruslabs/cli"
  {{- end }}
{{- end }}
{{- if .core.personal }}
tap "inean/brews", "https://github.com/inean/homebrew.git"
{{- end }}

{{ range ($brews | sortAlpha | uniq) -}}
brew {{ . }}
{{ end -}}
{{ range ($casks | sortAlpha | uniq) -}}
cask {{ . }}
{{ end -}} 
EOF

# Now install and upgrade any already-installed formulae.
brew bundle install --no-upgrade --no-lock --file=$BREWFILE

# And cleanup not listed formulaes
brew bundle cleanup --force --file=$BREWFILE

{{ if .core.personal -}}
# Switch to using brew-installed bash as default insteand of systemn bash shell
if ! fgrep -q "${HOMEBREW_PREFIX}/bin/bash" /etc/shells; then
  echo "${HOMEBREW_PREFIX}/bin/bash" | sudo tee -a /etc/shells;
fi;
{{- end -}}
