{{- /* # Boostrap packages */ -}}
{{- $brews := list
     "curl" -}}
{{- $casks := list -}}

{{- /* # Core packages */ -}}
{{- $brews = concat $brews (list
     "bash"
     "bash-completion@2"
     "coreutils"
     "findutils"
     "gnu-sed"
     "jq") -}}
     
{{- /* # Docker packages */ -}}
{{- if .docker -}}
  {{ $brews = concat $brews (list
     "podman"
     "podman-compose") -}}

  {{- if and (eq .chezmoi.arch "amd64") (not .headless) -}}
    {{- $casks = concat $casks (list
      "podman-desktop") -}}
  {{- end -}}

{{- end -}}

{{- /* # GUI core packages */ -}}
{{- if not .headless -}}
  {{ $casks := concat $casks (list
     "firefox"
     "google-chrome"
     "iterm2"
     "visual-studio-code") -}}
{{- end -}}

{{- if or (not .headless) (not .ephimeral) -}}
  {{- $brews = concat $brews (list
     "bat"
     "exa"
     "ffmpeg"
     "fzf"
     "gh"
     "git-lfs"
     "pinentry-mac"
     "ripgrep"
     "ssh-copy-id"
     "tmux"
     "wget"
     "xz"
     "yt-dlp") -}}
  {{- if eq .chezmoi.arch "amd64" -}}
    {{- $brews = concat $brews (list
       "shellcheck") -}}
  {{- end -}}

  {{- $casks = concat $casks (list
     "balenaetcher"
     "gns3"
     "spotify"
     "telegram"
     "transmission"
     "vagrant"
     "vlc"
     "whatsapp"
  ) -}}
  {{- if and (eq .chezmoi.os "darwin") (le "12" (substr 7 9 .osid)) -}}
    {{- $casks = concat $casks (list
       "vagrant-vmware-utility"
       "vmware-fusion"
       ) -}}
  {{- end -}}

  {{ if .personal -}}
  {{- $brews = concat $brews (list
     "age"
     "gopass"
     "gnupg"
     "vault"
     ) -}}
  {{- end -}}
{{- end -}}

#!/bin/bash

set -eufo pipefail

# Install Homebrew.
if [ ! -x "$(command -v brew)" ]; then
   brew_url="https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"
   if [ "$(command -v curl)" ]; then
    sh -c "$(curl -fsSL $brew_url)"
  elif [ "$(command -v wget)" ]; then
    sh -c "$(wget -qO- $brew_url)"
  else
    echo "To install Homebrew, you must have curl or wget installed." >&2
    exit 1
  fi
fi

# Make sure we’re using the latest Homebrew.
brew update

brew bundle --no-lock --no-upgrade --file=/dev/stdin <<EOF
tap "homebrew/core"
tap "homebrew/cask"
tap "homebrew/bundle"
tap "homebrew/services"

{{ range ($brews | sortAlpha | uniq) -}}
brew "{{ . }}"
{{ end -}}
{{ range ($casks | sortAlpha | uniq) -}}
cask "{{ . }}"
{{ end -}}
EOF

# Now upgrade any already-installed formulae.
brew upgrade
# And finally cleanup all this
brew cleanup

{{ if .personal -}}
# Save Homebrew’s installed location.
BREW_PREFIX=$(brew --prefix)

# Switch to using brew-installed bash as default bash shell
if ! fgrep -q "${BREW_PREFIX}/bin/bash" /etc/shells; then
  echo "${BREW_PREFIX}/bin/bash" | sudo tee -a /etc/shells;
fi;
{{- end -}}
