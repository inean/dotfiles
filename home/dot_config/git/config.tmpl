# vim: filetype=gitconfig
# This is Git's per-user configuration file.

[apply]

	# Detect whitespace errors when applying a patch.
	whitespace = fix

[branch]

	# Show most recently changed branches first.
	sort = -committerdate

[core]

	# Use custom `.gitignore` and `.gitattributes`.
	excludesfile = ~/.config/git/ignore.global

	# Treat spaces before tabs and all kinds of trailing whitespace as an error.
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Make `git rebase` safer on macOS.
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

	# Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true

[color]

	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git ≥ 1.8.4.)
	ui = auto

[color "branch"]

	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]

	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]

	added = yellow
	changed = green
	untracked = cyan

[commit]

	# https://help.github.com/articles/signing-commits-using-gpg/
	gpgsign = false
	template = ~/.config/git/message
	verbose = true

[diff]

	# Use better, descriptive initials (c, i, w) instead of a/b
    mnemonicPrefix = true
	# When using `--word-diff`, assume `--word-diff-regex=.`
    wordRegex = .
    # Color moved lines in diffs
    colorMoved = zebra
    # Allow indentation changes to be marked as moved lines
    colorMovedWS = allow-indentation-change
	# Detect copies as well as renames.
	renames = copies

[diff "bin"]

	# Use `hexdump` to diff binary files.
	textconv = hexdump -v -C

[fetch]
  	# Remove any remote-tracking references that no longer exist before
  	prune = true

[help]

	# Automatically correct and execute mistyped commands.
	autocorrect = 1

{{ if .personal -}}
[http]

	# Where to store cookie files
	cookiefile = ~/.config/git/cookies
{{ end -}}

[init]
	# Main branch name
	defaultBranch = main

[merge]

	# Include summaries of merged commits in newly created merge commit messages
	log = true

[pull]

	# Only allow fast-forward merges
	rebase = true
	ff = only

[push]

	# https://git-scm.com/docs/git-config#git-config-pushdefault
	default = simple
	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true

[rebase]

	autosquash = true
	autostash = true

[user]

	name = Carlos Martín
	email = {{ .email | quote }}

{{ if eq .chezmoi.os "windows" -}}
[safe]
	directory = {{ .chezmoi.workingTree }}
{{ end -}}
[status]
	submoduleSummary = true

# URL shorthands

{{- if .personal }}
[url "git@github.com:inean/"]
	insteadOf = https://github.com/inean/
[url "git@github.com:artecoids/"]
	insteadOf = https://github.com/artecoids/
{{- end }}

[url "git@github.com:"]

	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]

	insteadOf = "github:"

[url "git@gist.github.com:"]

	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]

	insteadOf = "gist:"

{{- $ghPath := lookPath "gh" }}
{{- if $ghPath }}
[credential "https://github.com"]
	helper = !{{ $ghPath }} auth git-credential
[credential "https://gist.github.com"]
	helper = !{{ $ghPath }} auth git-credential
{{- end }}
{{/* vim: set filetype=gitconfig: */}}

[include]
    path = alias
    path = config.local
    path = delta