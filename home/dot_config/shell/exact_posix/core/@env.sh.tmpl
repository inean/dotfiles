#
# Core configuration module
#

# Env functions
# ===============

# Usage: indirect_expand PATH -> $PATH
indirect_expand () {
    env | sed -n "s/^$1=//p"
}

# Usage: path_remove /path/to/bin [PATH]
# Eg, to remove ~/bin from $PATH
#     path_remove ~/bin PATH
path_remove () {
    local IFS=':'
    local newpath
    local dir
    local var=${2:-PATH}
    # Bash has ${!var}, but this is not portable.
    for dir in $(indirect_expand "$var"); do
        IFS=''
        if [ "$dir" != "$1" ]; then
            newpath=$newpath:$dir
        fi
    done
    export $var=${newpath#:}
}

# Usage: path_prepend /path/to/bin [PATH]
# Eg, to prepend ~/bin to $PATH
#     path_prepend ~/bin PATH
path_prepend () {
    [ -d "${1}" ] || return
    # if the path is already in the variable,
    # remove it so we can move it to the front
    path_remove "$1" "$2"
    local var="${2:-PATH}"
    local value=$(indirect_expand "$var")
    export ${var}="${1}${value:+:${value}}"
}

# Usage: pathappend /path/to/bin [PATH]
# Eg, to append ~/bin to $PATH
#     pathappend ~/bin PATH
path_append () {
    [ -d "${1}" ] || return
    path_remove "${1}" "${2}"
    local var=${2:-PATH}
    local value=$(indirect_expand "$var")
    export $var="${value:+${value}:}${1}"
}

# If you come from bash you might have to change your $PATH.
{{- $paths := list }}
{{- $homeDir := .chezmoi.homeDir }}
{{- range $_, $relPath := list "bin" "go/bin" ".cargo/bin" ".local/bin" }}
{{-    $path := joinPath $homeDir $relPath }}
        path_prepend $path PATH
{{- end }}

# Explicitly set XDG base dirs as they are needed later
export XDG_CACHE_HOME="${HOME}/.cache" && mkdir -p ${XDG_CACHE_HOME}
export XDG_CONFIG_HOME="${HOME}/.config" && mkdir -p ${XDG_CONFIG_HOME}
export XDG_BIN_HOME="${HOME}/.local/bin" && mkdir -p ${XDG_BIN_HOME}
export XDG_DATA_HOME="${HOME}/.local/share" && mkdir -p ${XDG_DATA_HOME}
export XDG_STATE_HOME="${HOME}/.local/state" && mkdir -p ${XDG_STATE_HOME}

# App specific overrides
export GNUPGHOME="${XDG_DATA_HOME}/gnupg" && mkdir -p ${GNUPGHOME}

# go
export GOPATH="${XDG_DATA_HOME}/go"

# cargo
export RUSTUP_HOME="${XDG_DATA_HOME}/rustup"
export CARGO_HOME="${XDG_DATA_HOME}/cargo"

# npm
export NPM_CONFIG_PREFIX="${XDG_DATA_HOME}/npm"
export NPM_CONFIG_USERCONFIG="${XDG_CONFIG_HOME}/npm/npmrc"

# editor
{{- if eq .chezmoi.os "darwin" }}
export HOMEBREW_NO_AUTO_UPDATE=1
{{- end -}}
export LANG=es_ES.UTF-8
export LC_ALL=es_ES.UTF-8

# Create files/dirs with owner r/w permissions
umask 0022
